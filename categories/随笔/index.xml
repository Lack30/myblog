<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>随笔 on lack 的个人博客</title>
    <link>http://xingyys.tech/categories/%E9%9A%8F%E7%AC%94/</link>
    <description>Recent content in 随笔 on lack 的个人博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Mon, 04 Jan 2021 22:45:23 +0800</lastBuildDate><atom:link href="http://xingyys.tech/categories/%E9%9A%8F%E7%AC%94/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>KVM介绍</title>
      <link>http://xingyys.tech/post/kvm_detail/</link>
      <pubDate>Mon, 04 Jan 2021 22:45:23 +0800</pubDate>
      
      <guid>http://xingyys.tech/post/kvm_detail/</guid>
      <description>KVM 概述 KVM (Kernal-base Virtual Machine) 基于内核的虚拟机。是一种通过修改 linux 内核实现虚拟化功能的半虚拟化技术。由于是在内核基础上运行，所有具有接近物理机的高性能。 KVM 和 Qemu</description>
    </item>
    
    <item>
      <title>Golang跨平台编译</title>
      <link>http://xingyys.tech/post/golang%E8%B7%A8%E5%B9%B3%E5%8F%B0%E7%BC%96%E8%AF%91/</link>
      <pubDate>Thu, 10 Sep 2020 14:52:46 +0800</pubDate>
      
      <guid>http://xingyys.tech/post/golang%E8%B7%A8%E5%B9%B3%E5%8F%B0%E7%BC%96%E8%AF%91/</guid>
      <description>golang cgo 到 Windows 的交叉编译 本篇记录在 MaxOS 下 cgo 交叉编译的解决方案。 因为在项目中使用 go-sqlite3 ，编译 go-sqlite3 中需要使用到 cgo。 在 MacOS 下编译 Go 原生 Linux 和 Windows 的程序使用以下命令</description>
    </item>
    
    <item>
      <title>Aix添加和删除Iscsi存储卷</title>
      <link>http://xingyys.tech/post/aix1/</link>
      <pubDate>Tue, 22 Oct 2019 15:12:53 +0800</pubDate>
      
      <guid>http://xingyys.tech/post/aix1/</guid>
      <description>Aix为6.1版本 使用iscsi存储 首先需要创建一个iscsi target，并共享到IBM Aix上。 检查iscsi是否被安装 1 2 3 4 5 $ lslpp -L</description>
    </item>
    
    <item>
      <title>Spring框架的核心总结</title>
      <link>http://xingyys.tech/post/spring%E6%A1%86%E6%9E%B6%E7%9A%84%E6%A0%B8%E5%BF%83%E6%80%BB%E7%BB%93/</link>
      <pubDate>Mon, 19 Aug 2019 16:56:42 +0800</pubDate>
      
      <guid>http://xingyys.tech/post/spring%E6%A1%86%E6%9E%B6%E7%9A%84%E6%A0%B8%E5%BF%83%E6%80%BB%E7%BB%93/</guid>
      <description>最近在学习Java语言，从而也学习了SpringFramework 这个大名鼎鼎的框架。从而做一些的记录。 题外话: 学习过几种不同的语言，后来知</description>
    </item>
    
    <item>
      <title>制作rpm包</title>
      <link>http://xingyys.tech/post/%E5%88%B6%E4%BD%9Crpm%E5%8C%85/</link>
      <pubDate>Wed, 29 May 2019 17:34:45 +0800</pubDate>
      
      <guid>http://xingyys.tech/post/%E5%88%B6%E4%BD%9Crpm%E5%8C%85/</guid>
      <description>制作rpm包的流程 rpm包是redhat和CentOS等linux发行版的包管理工具，能有效的管理系统的软件包，包括添加、删除、升级等操作。</description>
    </item>
    
    <item>
      <title>C&#43;&#43;友元</title>
      <link>http://xingyys.tech/post/c&#43;&#43;%E5%8F%8B%E5%85%83/</link>
      <pubDate>Sat, 11 May 2019 16:41:20 +0800</pubDate>
      
      <guid>http://xingyys.tech/post/c&#43;&#43;%E5%8F%8B%E5%85%83/</guid>
      <description>友元说明 相对于其他的编程语言，“友元”是C++中特别的一种语法。那它有什么作用呢？ 其实“友元”就是提供一种访问类私有部分的的方法。如果没有“</description>
    </item>
    
    <item>
      <title>golang打包和解包</title>
      <link>http://xingyys.tech/post/golang%E6%89%93%E5%8C%85%E5%92%8C%E8%A7%A3%E5%8C%85/</link>
      <pubDate>Fri, 15 Feb 2019 15:03:44 +0000</pubDate>
      
      <guid>http://xingyys.tech/post/golang%E6%89%93%E5%8C%85%E5%92%8C%E8%A7%A3%E5%8C%85/</guid>
      <description>打包 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 // 打包 func Compress(destPath, srcDir string)</description>
    </item>
    
    <item>
      <title>linux上使用udev创建裸设备</title>
      <link>http://xingyys.tech/post/linux%E4%B8%8A%E4%BD%BF%E7%94%A8udev%E5%88%9B%E5%BB%BA%E8%A3%B8%E8%AE%BE%E5%A4%87/</link>
      <pubDate>Sat, 26 Jan 2019 08:28:36 +0000</pubDate>
      
      <guid>http://xingyys.tech/post/linux%E4%B8%8A%E4%BD%BF%E7%94%A8udev%E5%88%9B%E5%BB%BA%E8%A3%B8%E8%AE%BE%E5%A4%87/</guid>
      <description>需求和分析 在一次项目中需要将进行oracle数据库的备份，要求在oracle机器总是能认到备份的块设备的路径以保证备份和恢复的正常。同时还需</description>
    </item>
    
    <item>
      <title>配置七牛云存储外链</title>
      <link>http://xingyys.tech/post/%E9%85%8D%E7%BD%AE%E4%B8%83%E7%89%9B%E4%BA%91%E5%AD%98%E5%82%A8%E5%A4%96%E9%93%BE/</link>
      <pubDate>Sat, 19 Jan 2019 19:10:51 +0000</pubDate>
      
      <guid>http://xingyys.tech/post/%E9%85%8D%E7%BD%AE%E4%B8%83%E7%89%9B%E4%BA%91%E5%AD%98%E5%82%A8%E5%A4%96%E9%93%BE/</guid>
      <description>今天重新整理了下博客，发现之前配置好的七牛云图片显示错误。重新配置的同时也记录下配置步骤。 添加域名 登录七牛云的官网融合CDN，在“域名管理”</description>
    </item>
    
    <item>
      <title>python装饰器</title>
      <link>http://xingyys.tech/post/python%E8%A3%85%E9%A5%B0%E5%99%A8/</link>
      <pubDate>Sat, 31 Mar 2018 19:55:04 +0000</pubDate>
      
      <guid>http://xingyys.tech/post/python%E8%A3%85%E9%A5%B0%E5%99%A8/</guid>
      <description>简单的装饰器函数： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 import time from functools import wraps def timethis(func): &amp;#34;&amp;#34;&amp;#34; Decorator that reports the execution time. &amp;#34;&amp;#34;&amp;#34; @wraps(func) def wrapper(*args, **kwargs): start = time.time() result = func(*args, **kwargs) end = time.time() print(func.__name__, end-start) return result return wrapper 函数的功能很简单，就</description>
    </item>
    
  </channel>
</rss>
