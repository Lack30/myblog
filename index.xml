<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>lack 的个人博客</title>
        <link>http://xingyys.tech/</link>
        <description>关于 DoIt 主题</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>598223084@qq.com (Lack)</managingEditor>
            <webMaster>598223084@qq.com (Lack)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Sun, 10 Oct 2021 23:54:28 &#43;0800</lastBuildDate>
            <atom:link href="http://xingyys.tech/index.xml" rel="self" type="application/rss+xml" />
        <item>
    <title>Linux内存</title>
    <link>http://xingyys.tech/linux%E5%86%85%E5%AD%98/</link>
    <pubDate>Sun, 10 Oct 2021 23:54:28 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://xingyys.tech/linux%E5%86%85%E5%AD%98/</guid>
    <description><![CDATA[内存概论 虚拟内存 虚拟内存(virtual memory)是 Unix 系统中一种对内存的抽象。虚拟内存作为一种逻辑层，处于应用程序的内存请求与硬件内存管]]></description>
</item><item>
    <title>容灾一体机部署文档</title>
    <link>http://xingyys.tech/%E5%AE%B9%E7%81%BE%E4%B8%80%E4%BD%93%E6%9C%BA%E9%83%A8%E7%BD%B2%E6%96%87%E6%A1%A3/</link>
    <pubDate>Fri, 08 Oct 2021 17:30:22 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://xingyys.tech/%E5%AE%B9%E7%81%BE%E4%B8%80%E4%BD%93%E6%9C%BA%E9%83%A8%E7%BD%B2%E6%96%87%E6%A1%A3/</guid>
    <description><![CDATA[一、准备工作 1.1 环境要求 主机类型 操作系统 硬件要求 服务端 linux CentOS7.x CPU 8核，内存32G，200G硬盘 客户端 CentOS oracle 或 Sqlserver 2012 备注： 1、DR的压缩包和相关的依赖工]]></description>
</item><item>
    <title>Docker容器和网络架构设计</title>
    <link>http://xingyys.tech/docker%E5%AE%B9%E5%99%A8%E5%92%8C%E7%BD%91%E7%BB%9C%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1/</link>
    <pubDate>Tue, 28 Sep 2021 20:15:19 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://xingyys.tech/docker%E5%AE%B9%E5%99%A8%E5%92%8C%E7%BD%91%E7%BB%9C%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="https://raw.githubusercontent.com/xingyys/myblog/main/posts/images/20210926200427.png" referrerpolicy="no-referrer">
            </div>常用的容器化技术 Chroot 特点: 改变正在运行的进程和它的子进程根目录。 经chroot设置根目录的程序，不能够对这个指定根目录之外的文件进行访问和读取]]></description>
</item><item>
    <title>tokio 高级用法</title>
    <link>http://xingyys.tech/tokio%E9%AB%98%E7%BA%A7%E7%94%A8%E6%B3%95/</link>
    <pubDate>Tue, 14 Sep 2021 13:03:07 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://xingyys.tech/tokio%E9%AB%98%E7%BA%A7%E7%94%A8%E6%B3%95/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="https://raw.githubusercontent.com/xingyys/myblog/main/posts/images/rust-logo.png" referrerpolicy="no-referrer">
            </div>上一篇了解了 tokio 的基本用法，接下来我们继续深入 tokio 的详细用法。 深入 async rust 从 1.36 版本开始引入 async/await 作为支持异步相关的关键字。其内部是实现了 std::future::Future 这个特性。 Future std::future::Future]]></description>
</item><item>
    <title>Tokio 初尝试</title>
    <link>http://xingyys.tech/tokio%E5%88%9D%E5%B0%9D%E8%AF%95/</link>
    <pubDate>Sun, 12 Sep 2021 14:46:43 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://xingyys.tech/tokio%E5%88%9D%E5%B0%9D%E8%AF%95/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="https://raw.githubusercontent.com/xingyys/myblog/main/posts/images/rust-logo.png" referrerpolicy="no-referrer">
            </div>简介 Tokio is an asynchronous runtime for the Rust programming language. It provides the building blocks needed for writing networking applications. It gives the flexibility to target a wide range of systems, from large servers with dozens of cores to small embedded devices. Tokio 是 rust 实现的异步库，提供一个异步运行时。它具有以下的]]></description>
</item><item>
    <title>深入理解计算机系统</title>
    <link>http://xingyys.tech/csapp/</link>
    <pubDate>Tue, 31 Aug 2021 18:27:27 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://xingyys.tech/csapp/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="https://raw.githubusercontent.com/xingyys/myblog/main/posts/images/featured-image.png" referrerpolicy="no-referrer">
            </div>一、计算机系统漫游 计算机系统是由硬件和软件组成。 1.1 信息就是位 + 上下文 系统中所有的信息——包括磁盘文件、内存中的程序、内存中存放的用户数据以及]]></description>
</item><item>
    <title>Dblink</title>
    <link>http://xingyys.tech/dblink/</link>
    <pubDate>Mon, 30 Aug 2021 17:49:19 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://xingyys.tech/dblink/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="https://raw.githubusercontent.com/xingyys/myblog/main/posts/oracle/images/20210830185536.png" referrerpolicy="no-referrer">
            </div>查询所有触发器 1 select*fromuser_triggers; 根据名称禁用触发器 1 altertriggerLOGMNRGGC_TRIGGERdisable; 查询所有 job 1 select*fromuser_jobs; 根据 id 禁用 job 1 BEGINdbms_job.broken(4001,true);END; 禁用 oracle dblink 1 2 altersystemsetopen_links=0sid=&#39;$sid&#39;scope=spfile;altersystemsetopen_links_per_instance=0sid=&#39;$sid&#39;scope=spfile; 启用 oracle dblink 1 2 altersystemsetopen_links=4sid=&#39;$sid&#39;scope=spfile;altersystemsetopen_links_per_instance=4sid=&#39;$sid&#39;scope=spfile;]]></description>
</item><item>
    <title>KVM镜像管理工具libguestfs</title>
    <link>http://xingyys.tech/libguestfs/</link>
    <pubDate>Sun, 31 Jan 2021 10:38:28 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://xingyys.tech/libguestfs/</guid>
    <description><![CDATA[简介 libguestfs 是一套管理虚拟机镜像的工具。它提供以一系列命令和API来修改和管理虚拟机的镜像。 安装 直接使用 yum 安装 libguestfs : 1 yum install -y libguestfs-tool libguestfs-devel 默认不支持修改 windows 镜像]]></description>
</item><item>
    <title>qemu-img命令使用</title>
    <link>http://xingyys.tech/qemu-img%E5%91%BD%E4%BB%A4%E4%BD%BF%E7%94%A8/</link>
    <pubDate>Sun, 17 Jan 2021 22:35:06 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://xingyys.tech/qemu-img%E5%91%BD%E4%BB%A4%E4%BD%BF%E7%94%A8/</guid>
    <description><![CDATA[qemu-img 是 QEMU 的磁盘管理工具，它允许用户创建、转化、修改 QEMU 磁盘。 注：qemu-img 操作磁盘时需要关闭 kvm 虚拟机，直接在虚拟机运行时修改磁盘可能会导致]]></description>
</item><item>
    <title>分布式的工作流实现</title>
    <link>http://xingyys.tech/%E5%88%86%E5%B8%83%E5%BC%8F%E7%9A%84%E5%B7%A5%E4%BD%9C%E6%B5%81%E5%AE%9E%E7%8E%B0/</link>
    <pubDate>Sun, 10 Jan 2021 14:34:22 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://xingyys.tech/%E5%88%86%E5%B8%83%E5%BC%8F%E7%9A%84%E5%B7%A5%E4%BD%9C%E6%B5%81%E5%AE%9E%E7%8E%B0/</guid>
    <description><![CDATA[本篇提供一个实现分布式工作流的思路。 系统组成部分： api (网关接口) : 为用户提供工作流的api接口 discovery (服务发现) : 用于服务的注册和发现 scheduler (调度中]]></description>
</item></channel>
</rss>
